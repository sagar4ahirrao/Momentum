import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np

# Helper functions
def fetch_data(ticker, start_date, end_date):
    try:
        data = yf.download(ticker + ".NS", start=start_date, end=end_date)
        data = data[['Close']]
        return data
    except Exception as e:
        st.error(f"Error fetching data for {ticker}: {e}")
        return pd.DataFrame(columns=['Close'])

def calc_return(price, length):
    return price.pct_change(periods=length).shift(-length)

def calc_stddev(price, length):
    log_return = np.log(price / price.shift(1))
    stddev = log_return.rolling(window=length).std() * np.sqrt(252)
    return stddev

# Streamlit UI
st.title("Normalized Momentum Score Calculator")

# List of Indian stock tickers
tickers = ['360ONE','3MINDIA','ABB','ACC','AGI','AIAENG','APLAPOLLO','ASKAUTOLTD','AUBANK','AARTIDRUGS','AARTIIND','AARTIPHARM','AAVAS','ABBOTINDIA','ACCELYA','ACE','ADANIENSOL','ADANIENT','ADANIGREEN','ADANIPORTS','ADANIPOWER','ATGL','AWL','ABCAPITAL','ABFRL','ADVENZYMES','AEGISLOG','AETHER','AFFLE','AHLUCONT','AJANTPHARM','APLLTD','ALKEM','ALKYLAMINE','ALLCARGO','ALOKINDS','ARE&M','AMBER','AMBUJACEM','AMIORG','ANANDRATHI','ANANTRAJ','ANGELONE','ANURAS','APARINDS','APOLLOHOSP','APOLLOTYRE','APTUS','ACI','ARVINDFASN','ARVIND','ASAHIINDIA','ASHOKLEY','ASHOKA','ASIANPAINT','ASTERDM','ASTRAMICRO','ASTRAZEN','ASTRAL','ATUL','AUROPHARMA','AVALON','AVANTIFEED','DMART','AXISBANK','AZAD','BASF','BEML','BLS','BSE','BAJAJ-AUTO','BAJAJCON','BAJFINANCE','BAJAJFINSV','BAJAJHIND','BAJAJHLDNG','BALAMINES','BALKRISIND','BALMLAWRIE','BALRAMCHIN','BANCOINDIA','BANDHANBNK','BANKBARODA','BANKINDIA','MAHABANK','BARBEQUE','BATAINDIA','BAYERCROP','BERGEPAINT','BEPL','BDL','BEL','BHARATFORG','BHEL','BPCL','BHARTIARTL','BIKAJI','BIOCON','BIRLACORPN','BSOFT','BLUEDART','BLUEJET','BLUESTARCO','BBTC','BOMDYEING','BORORENEW','BOSCHLTD','BRIGADE','BRITANNIA','MAPMYINDIA','CARERATING','CCL','CESC','CGPOWER','CIEINDIA','CMSINFO','CRISIL','CSBBANK','CAMLINFINE','CAMPUS','CANFINHOME','CANBK','CAPLIPOINT','CGCL','CARBORUNIV','CARTRADE','CASTROLIND','CEATLTD','CELLO','CENTRALBK','CDSL','CENTURYPLY','CENTURYTEX','CERA','CHALET','CHAMBLFERT','CHEMPLASTS','CHENNPETRO','CHOICEIN','CHOLAHLDNG','CHOLAFIN','CIGNITITEC','CIPLA','CUB','CLEAN','COALINDIA','COCHINSHIP','COFORGE','COLPAL','CAMS','CONCORDBIO','CONFIPET','CONCOR','COROMANDEL','CRAFTSMAN','CREDITACC','CROMPTON','CUMMINSIND','CYIENTDLM','CYIENT','DBCORP','DCBBANK','DCMSHRIRAM','DCXINDIA','DLF','DOMS','DABUR','DALBHARAT','DALMIASUG','DATAPATTNS','DATAMATICS','DEEPAKFERT','DEEPAKNTR','DELHIVERY','DELTACORP','DEN','DEVYANI','DHANI','DHANUKA','DBL','DISHTV','DCAL','DIVISLAB','DIXON','DODLA','LALPATHLAB','DRREDDY','DREAMFOLKS','DUMMYRAYMD','DUMMYSANOF','EIDPARRY','EIHOTEL','EPL','ESAFSFB','EASEMYTRIP','EDELWEISS','EICHERMOT','ELECON','EMIL','ELECTCAST','ELGIEQUIP','EMAMILTD','ENDURANCE','ENGINERSIN','EPIGRAL','EMBDL','EQUITASBNK','ERIS','ESCORTS','ETHOSLTD','EVEREADY','EXIDEIND','FDC','NYKAA','FEDFINA','FEDERALBNK','FACT','FIEMIND','FINEORG','FCL','FINCABLES','FINPIPE','FSL','FIVESTAR','FLAIR','FORTIS','FUSION','GRINFRA','GAIL','GHCL','GMMPFAUDLR','GMRINFRA','GABRIEL','GALAXYSURF','GANESHHOUC','GRSE','GRWRHITECH','GATEWAY','GICRE','GILLETTE','GLAND','GLAXO','GLS','GLENMARK','MEDANTA','GLOBUSSPR','GOCOLORS','GPIL','GODFRYPHLP','GODREJAGRO','GODREJCP','GODREJIND','GODREJPROP','GOKEX','GRANULES','GRAPHITE','GRASIM','GRAVITA','GESHIP','GREAVESCOT','GREENPANEL','GREENPLY','GRINDWELL','GUFICBIO','GUJALKALI','GAEL','FLUOROCHEM','GUJGASLTD','GMDCLTD','GNFC','GPPL','GSFC','GSPL','GULFOILLUB','HEG','HGINFRA','HBLPOWER','HCLTECH','HDFCAMC','HDFCBANK','HDFCLIFE','HFCL','HLEGLAS','HMAAGRO','HAPPSTMNDS','HAPPYFORGE','HATHWAY','HAVELLS','HEIDELBERG','HEMIPROP','HERITGFOOD','HEROMOTOCO','HIKAL','HSCL','HINDALCO','HAL','HCC','HINDCOPPER','HINDOILEXP','HINDPETRO','HINDUNILVR','HINDZINC','HINDWAREAP','POWERINDIA','HOMEFIRST','HONASA','HONAUT','HUDCO','ICICIBANK','ICICIGI','ICICIPRULI','ISEC','IDBI','IDFCFIRSTB','IDFC','IFBIND','IFCI','IIFL','IIFLSEC','IKIO','INOXINDIA','IOLCP','IRB','IRCON','ITC','ITDCEM','ITI','IDEAFORGE','INDIACEM','INDIAGLYCO','IPL','INDIASHLTR','INDIAMART','INDIANB','IEX','INDHOTEL','IMFA','IOC','IOB','IRCTC','IRFC','INDIGOPNTS','ICIL','INDOCO','IGL','INDUSTOWER','INDUSINDBK','INFIBEAM','NAUKRI','INFY','INGERRAND','INOXWIND','INTELLECT','INDIGO','IONEXCHANG','IPCALAB','ISGEC','JBCHEPHARM','JKCEMENT','JKIL','JBMA','JKLAKSHMI','JKPAPER','JKTYRE','JMFINANCIL','JSWENERGY','JSWHL','JSWINFRA','JSWSTEEL','JTEKTINDIA','JTLIND','JAIBALAJI','JAICORPLTD','JISLJALEQS','JPASSOCIAT','JPPOWER','J&KBANK','JAMNAAUTO','JINDALSAW','JSL','JINDALSTEL','JINDWORLD','JIOFIN','JCHAC','JUBLFOOD','JUBLINGREA','JUBLPHARMA','JUNIPER','JLHL','JWL','JUSTDIAL','JYOTHYLAB','JYOTICNC','KPRMILL','KEI','KNRCON','KPIGREEN','KPITTECH','KRBL','KSB','KAJARIACER','KPIL','KALYANKJIL','KANSAINER','KTKBANK','KARURVYSYA','KSCL','KAYNES','KEC','KESORAMIND','KFINTECH','KIRLOSBROS','KIRLOSENG','KOLTEPATIL','KOTAKBANK','KIMS','KRSNAA','LTF','LTTS','LGBBROSLTD','LICHSGFIN','LTFOODS','LTIM','LAOPALA','LANDMARK','LT','LATENTVIEW','LAURUSLABS','LXCHEM','LEMONTREE','LICI','LINDEINDIA','LLOYDSENGG','LLOYDSME','LUPIN','LUXIND','MASFIN','MMTC','MOIL','MRF','MSTCLTD','MTARTECH','LODHA','MGL','MAHSEAMLES','M&MFIN','M&M','MHRIL','MAHLIFE','MAHLOG','MAITHANALL','MANINFRA','MANAPPURAM','MRPL','MANKIND','MARICO','MARKSANS','MARUTI','MASTEK','MFSL','MAXHEALTH','MAZDOCK','MEDPLUS','METROBRAND','METROPOLIS','MINDACORP','MIDHANI','MSUMI','MOTILALOFS','MPHASIS','BECTORFOOD','MCX','MUTHOOTFIN','MUTHOOTMF','NATCOPHARM','NBCC','NCC','NESCO','NHPC','NIITMTS','NLCINDIA','NMDC','NSLNISP','NOCIL','NRBBEARING','NTPC','NH','NATIONALUM','NFL','NAVA','NAVINFLUOR','NAVNETEDUL','NAZARA','NESTLEIND','NETWEB','NETWORK18','NEULANDLAB','NEWGEN','NAM-INDIA','NUCLEUS','NUVAMA','NUVOCO','OBEROIRLTY','ONGC','OIL','OLECTRA','PAYTM','OPTIEMUS','OFSS','ORIENTCEM','ORIENTELEC','ORISSAMINE','POLICYBZR','PCBL','PDSL','PGEL','PIIND','PNBHOUSING','PNCINFRA','PSPPROJECT','PTC','PVRINOX','PAGEIND','PAISALO','PARADEEP','PARAS','PATANJALI','PATELENG','PERSISTENT','PETRONET','PHOENIXLTD','PIDILITIND','PEL','PPLPHARMA','POLYMED','POLYCAB','POLYPLEX','POONAWALLA','PFC','POWERGRID','POWERMECH','PRAJIND','PRESTIGE','PRICOLLTD','PRINCEPIPE','PRSMJOHNSN','PGHH','PNB','PURVA','QUESS','RRKABEL','RBLBANK','RECLTD','RHIM','RITES','RADICO','RVNL','RAILTEL','RAIN','RAINBOW','RAJESHEXPO','RALLIS','RKFORGE','RAMKY','RCF','RATEGAIN','RATNAMANI','RTNINDIA','RTNPOWER','RAYMOND','REDINGTON','REDTAPE','RELIANCE','RELINFRA','RPOWER','RELIGARE','RESPONIND','RBA','ROSSARI','ROUTE','SBFC','SBICARD','SBILIFE','SJVN','SKFINDIA','SRF','SAFARI','SAGCEM','KALAMANDIR','SAMHI','SAMMAANCAP','MOTHERSON','SANDUMA','SANGHIIND','SANGHVIMOV','SANOFI','SANSERA','SAPPHIRE','SARDAEN','SAREGAMA','SCHAEFFLER','SCHNEIDER','SENCO','SEQUENT','SHARDAMOTR','SHAREINDIA','SFL','SHILPAMED','SCI','SBCL','SHOPERSTOP','SHREECEM','RENUKA','SHRIRAMFIN','SHYAMMETL','SIEMENS','SIGNATURE','SINDHUTRAD','SOBHA','SOLARINDS','SONACOMS','SONATSOFTW','SOUTHBANK','SPANDANA','STARCEMENT','STARHEALTH','SBIN','SAIL','SSWL','SWSOLAR','STLTECH','STAR','STYLAMIND','SUDARSCHEM','SULA','SUMICHEM','SPARC','SUNPHARMA','SUNTV','SUNCLAY','SUNDARMFIN','SUNDRMFAST','SUNFLAG','SUNTECK','SUPRAJIT','SUPREMEIND','SPLPETRO','SUPRIYA','SURYAROSNI','SUVENPHAR','SUZLON','SWANENERGY','SYNGENE','SYRMA','TARC','TCNSBRANDS','TDPOWERSYS','TTKPRESTIG','TV18BRDCST','TVSHLTD','TVSMOTOR','TVSSCS','TMB','TANLA','TARSONS','TATACHEM','TATACOMM','TCS','TATACONSUM','TATAELXSI','TATAINVEST','TATAMOTORS','TATAPOWER','TATASTEEL','TATATECH','TTML','TEAMLEASE','TECHM','TECHNOE','TEGA','TEJASNET','TEXRAIL','NIACL','RAMCOCEM','THERMAX','TIRUMALCHM','THOMASCOOK','TIDEWATER','TI','TIMETECHNO','TIMKEN','TIPSINDLTD','TITAGARH','TITAN','TORNTPHARM','TORNTPOWER','TRENT','TRIDENT','TRIVENI','TRITURBINE','TIINDIA','UCOBANK','UFLEX','UNOMINDA','UPL','UTIAMC','UJJIVANSFB','ULTRACEMCO','UNIONBANK','UNIPARTS','UBL','UNITDSPR','USHAMART','UTKARSHBNK','VGUARD','VMART','VIPIND','VSTTILLERS','VRLLOG','WABAG','VAIBHAVGBL','DBREALTY','VTL','VARROC','VBL','MANYAVAR','VEDL','VENKEYS','VIJAYA','IDEA','VOLTAMP','VOLTAS','WELCORP','WELENT','WELSPUNLIV','WSTCSTPAPR','WESTLIFE','WHIRLPOOL','WIPRO','WOCKPHARMA','WONDERLA','YATHARTH','YESBANK','ZFCVINDIA','ZEEL','ZENTEC','ZENSARTECH','ZOMATO','ZYDUSLIFE','ZYDUSWELL','ECLERX','EMUDHRA']

start_date = st.date_input("Start Date", pd.to_datetime("2022-01-01"))
end_date = st.date_input("End Date", pd.to_datetime("today"))

length15d = st.slider("ShortTerm Period", min_value=1, max_value=500, value=120)
length1m = st.slider("LongTerm Period", min_value=1, max_value=500, value=252)  # Approx. 21 trading days
lookback = st.slider("Lookback Period", min_value=1, max_value=500, value=252)

# List to store results
results = []

# Iterate through all tickers
for ticker in tickers:
    # Fetch data
    data = fetch_data(ticker, start_date, end_date)
    if data.empty:
        continue

    # Calculate Momentum Ratios
    price = data['Close']
    price = price.reindex(pd.date_range(start=start_date, end=end_date, freq='B')).ffill()

    stddev = calc_stddev(price, length1m)  # Using length1m for stddev calculation
    momentum_ratio_1m = calc_return(price, length1m) / stddev
    momentum_ratio_15d = calc_return(price, length15d) / stddev

    # Calculate Z-Scores
    mean_mr1m = momentum_ratio_1m.rolling(window=lookback).mean()
    std_mr1m = momentum_ratio_1m.rolling(window=lookback).std()
    mean_mr15d = momentum_ratio_15d.rolling(window=lookback).mean()
    std_mr15d = momentum_ratio_15d.rolling(window=lookback).std()

    z_score_1m = (momentum_ratio_1m - mean_mr1m) / std_mr1m
    z_score_15d = (momentum_ratio_15d - mean_mr15d) / std_mr15d

    # Calculate Weighted Average Z Score
    weighted_z_score = 0.5 * z_score_1m + 0.5 * z_score_15d

    # Ensure lengths match by dropping NaN values
    weighted_z_score = weighted_z_score.dropna()

    # Calculate Normalized Momentum Score
    normalized_momentum_score = np.where(weighted_z_score >= 0, 
                                          1 + weighted_z_score, 
                                          1 / (1 - weighted_z_score))

    # Get the latest Normalized Momentum Score
    if len(normalized_momentum_score) > 0:
        latest_score = normalized_momentum_score[-1]
        results.append({'Stock': ticker, 'Normalized Momentum Score': latest_score})

# Convert results to DataFrame and display
if results:
    results_df = pd.DataFrame(results)
    st.subheader("Latest Normalized Momentum Scores")
    st.dataframe(results_df)
else:
    st.write("No data available for the selected date range.")
